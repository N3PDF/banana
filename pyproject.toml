[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "banana-hep"
version = "0.0.0"
description = "Benchmark QCD physics"
readme = "README.md"
authors = [
  "Andrea Barontini <andrea.barontini@mi.infn.it>",
  "Alessandro Candido <alessandro.candido@mi.infn.it>",
  "Felix Hekhorn <felix.hekhorn@mi.infn.it>",
  "Niccol√≤ Laurenti <niccolo.laurenti@mi.infn.it>",
  "Giacomo Magni <gmagni@nikhef.nl>",
]
repository = "https://github.com/N3PDF/banana"
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
]
include = [
  "src/banana/data/theory_template.yaml",
]
packages = [{ include = "banana", from = "src" }]

[tool.poetry.dependencies]
python = "^3.8.0,<3.12"
ipython = "^8.1.0"
SQLAlchemy = "^1.4.29,<=2.0"
numpy = "^1.21.0"
pandas = "^1.3.5"
matplotlib = "^3.5.1"
rich = "^12.4.4"
PyYAML = "^6.0"
click = "^8.0.3"
pendulum = "^2.1.2"
appdirs = "^1.4.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^4.3.2"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-bibtex = "^2.4.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "4.0.0"
pylint = "^2.12.2"
pyfakefs = "^4.5.3"

[tool.poetry.group.dev.dependencies]
pdbpp = "^0.10.3"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
dirty = true

[tool.poetry-dynamic-versioning.substitution]
files = ["src/banana/__init__.py"]

[tool.poe.tasks]
coverage = "$BROWSER htmlcov/index.html"
test = "pytest tests"
test-cov = ["test", "coverage"]
lint = "pylint src/**/*.py -E"
lint-warnings = "pylint src/**/*.py --exit-zero"
docs = { "shell" = "cd docs; make html" }
docs-view = { "shell" = "cd docs; make view" }
docs-server = { "shell" = "cd docs; make server" }
docs-clean = { "shell" = "cd docs; make clean" }
docs-cleanall = { "shell" = "cd docs; make cleanall" }

[tool.pytest.ini_options]
addopts = [
  '--cov=banana',
  '--cov-report=html',
  '--cov-report=xml',
  '--strict-markers',
]

[tool.pylint.master]
# extensions not to check
extension-pkg-whitelist = ["numpy", "lhapdf"]
ignore-paths = ["benchmarks/", "docs/", "tests/"]
# has to be 1 as pylint is NOT threadsafe
jobs = 1
[tool.pylint.messages_control]
disable = ["invalid-name", "fixme"]
[tool.pylint.reports]
# Available formats are:
# text, parseable, colorized, json and msvs (visual studio).
output-format = "colorized"
[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 100
[tool.pylint.design]
# Maximum number of arguments for function / method
max-args = 10
